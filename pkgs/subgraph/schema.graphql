type Workspace @entity {
  id: ID!
  creator: String!
  owner: String!
  topHatId: BigInt!
  hatterHatId: BigInt!
  memberHatId: BigInt!
  operatorHatId: BigInt!
  creatorHatId: BigInt!
  minterHatId: BigInt!
  hatsTimeFrameModule: String!
  hatsHatCreatorModule: String!
  hatsFractionTokenModule: HatsFractionTokenModule
  thanksToken: ThanksToken!
  splitCreator: String!
  thanksToken: ThanksToken
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type HatsFractionTokenModule @entity {
  id: ID!
  workspaceId: ID!
  initializedTokens: [InitializedFractionToken!]!
    @derivedFrom(field: "hatsFractionTokenModule")
  transfers: [TransferFractionToken!]!
    @derivedFrom(field: "hatsFractionTokenModule")
  balances: [BalanceOfFractionToken!]!
    @derivedFrom(field: "hatsFractionTokenModule")
}

type InitializedFractionToken @entity {
  id: ID!
  hatsFractionTokenModule: HatsFractionTokenModule!
  tokenId: BigInt!
  hatId: BigInt!
  wearer: String!
  workspaceId: ID!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type TransferFractionToken @entity {
  id: ID!
  hatsFractionTokenModule: HatsFractionTokenModule!
  from: String!
  to: String!
  tokenId: BigInt!
  amount: BigInt!
  workspaceId: ID!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type BalanceOfFractionToken @entity {
  id: ID!
  hatsFractionTokenModule: HatsFractionTokenModule!
  owner: String!
  tokenId: BigInt!
  balance: BigInt!
  workspaceId: ID!
  hatId: BigInt!
  wearer: String!
  updatedAt: BigInt!
}

type ThanksToken @entity {
  id: ID!
  workspaceId: ID!
  mints: [MintThanksToken!]! @derivedFrom(field: "thanksToken")
  transfers: [TransferThanksToken!]! @derivedFrom(field: "thanksToken")
  mintAmounts: [AmountOfMintThanksToken!]! @derivedFrom(field: "thanksToken")
  balances: [BalanceOfThanksToken!]! @derivedFrom(field: "thanksToken")
}

type MintThanksToken @entity {
  id: ID!
  thanksToken: ThanksToken!
  from: String!
  to: String!
  amount: BigInt!
  workspaceId: ID!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type TransferThanksToken @entity {
  id: ID!
  thanksToken: ThanksToken!
  from: String!
  to: String!
  amount: BigInt!
  workspaceId: ID!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type AmountOfMintThanksToken @entity {
  id: ID!
  thanksToken: ThanksToken!
  sender: String!
  amount: BigInt!
  workspaceId: ID!
  updatedAt: BigInt!
}

type BalanceOfThanksToken @entity {
  id: ID!
  thanksToken: ThanksToken!
  owner: String!
  balance: BigInt!
  workspaceId: ID!
  updatedAt: BigInt!
}

type ThanksTokenTransfer @entity {
  id: ID!
  thanksToken: ThanksToken!
  from: String!
  to: String!
  amount: BigInt!
  workspaceId: ID!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type ThanksTokenBalance @entity {
  id: ID!
  thanksToken: ThanksToken!
  owner: String!
  balance: BigInt!
  workspaceId: ID!
  updatedAt: BigInt!
}

type ThanksTokenMint @entity {
  id: ID!
  thanksToken: ThanksToken!
  to: String!
  amount: BigInt!
  workspaceId: ID!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}
